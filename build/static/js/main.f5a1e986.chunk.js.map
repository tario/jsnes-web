{"version":3,"sources":["config.js","ListPage.js","ControlMapperRow.js","ControlsModal.js","FrameTimer.js","KeyboardController.js","GamepadController.js","Screen.js","utils.js","Speakers.js","RunPage.js","App.js","index.js"],"names":["config","ROMS","Bubble Bobble","Castlevania","Contra","Donkey Kong Classics","Duck Hunt","Final Fantasy","Golf","Kirby's Adventure","The Legend of Zelda","Lemmings","Lifeforce","Mario Bros.","Mega Man","Metal Gear","Metroid","Pac-Man","Super Mario Bros.","Super Mario Bros. 2","Super Mario Bros. 3","Tecmo Super Bowl","Teenage Mutant Ninja Turtles II","Tennis","Tetris","Tetris 2","Zelda 2","GOOGLE_ANALYTICS_CODE","process","REACT_APP_GOOGLE_ANALYTICS_CODE","SENTRY_URI","REACT_APP_SENTRY_URI","ListPage","handleDragOver","e","preventDefault","dataTransfer","dropEffect","handleDrop","file","items","getAsFile","files","_this","props","history","push","pathname","state","react_default","a","createElement","className","onDragOver","this","onDrop","href","reactstrap_es","Object","keys","map","key","Link","to","encodeURIComponent","Component","ControlMapperRow","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","playerOneButton","playerTwoButton","waitingForKey","handleClick","bind","assertThisInitialized","button","playerButtons","console","log","setState","prevProps","prevState","gamepadButton","newButton","searchButton","gamepadConfig","buttonId","buttons","filter","b","searchNewButton","prevGamepadConfig","some","b2","waitingForKeyPlayer","gamepadButtonName","type","code","value","playerGamepadId","configs","prevButton","newState","currentPromptButton","length","player","_this2","buttonName","onClick","GAMEPAD_ICON","KEYBOARD_ICON","ControlsModal","undefined","modified","handleKeyDown","handleGamepadButtonDown","listenForKey","controllerIcon","gamepadId","controllerIconAlt","setKeys","setGamepadConfig","removeKeyListener","promptButton","document","addEventListener","buttonInfo","playerId","slice","newConfig","concat","assign","event","newKeys","objectSpread","defineProperty","keyCode","toConsumableArray","String","toUpperCase","removeEventListener","isOpen","toggle","src","alt","src_ControlMapperRow","Controller","BUTTON_LEFT","BUTTON_SELECT","BUTTON_RIGHT","BUTTON_UP","BUTTON_DOWN","BUTTON_A","BUTTON_B","BUTTON_START","outline","color","FrameTimer","onAnimationFrame","calibrating","calibrationStartTime","Date","getTime","calibrationCurrentFrames","calibrationFrames","fps","desiredFPS","calibrationTolerance","startBodgeMode","requestAnimationFrame","running","bodgeMode","onGenerateFrame","onWriteFrame","bodgeInterval","setInterval","onBodge","calibrationDelay","_requestID","window","cancelAnimationFrame","clearInterval","KEYS","88","89","90","17","13","38","40","37","39","103","105","99","97","104","98","100","102","KeyboardController","options","loadKeys","localStorage","getItem","JSON","parse","setItem","stringify","onButtonDown","handleKeyUp","onButtonUp","handleKeyPress","GamepadController","disableIfGamepadEnabled","callback","self","_getPlayerNumberFromGamepad","gamepad","id","poll","gamepads","navigator","getGamepads","webkitGetGamepads","usedPlayers","gamepadIndex","previousGamepad","gamepadState","previousButtons","buttonCallback","axes","axis","previousAxis","previousButton","pressed","playerNumber","indexOf","configButtons","i","configButton","f","loadGamepadConfig","startPolling","req","loop","stop","SCREEN_WIDTH","SCREEN_HEIGHT","Screen","setBuffer","buffer","y","x","buf32","writeBuffer","imageData","data","set","buf8","context","putImageData","fitInParent","parent","canvas","parentNode","parentWidth","clientWidth","parentHeight","clientHeight","desiredRatio","style","width","Math","round","height","handleMouseDown","onMouseDown","scale","parseFloat","rect","getBoundingClientRect","clientX","left","clientY","top","onMouseUp","ref","initCanvas","getContext","getImageData","fillStyle","fillRect","buf","ArrayBuffer","Uint8ClampedArray","Uint32Array","img","Image","toDataURL","handleError","error","errorInfo","Raven","captureException","extra","Speakers","_ref","onBufferUnderrun","writeSample","right","size","bufferSize","enq","onaudioprocess","outputBuffer","getChannelData","samples","deqN","j","RingBuffer","AudioContext","audioCtx","scriptNode","createScriptProcessor","connect","destination","disconnect","close","catch","RunPage","load","match","params","rom","romName","path","currentRequest","handleProgress","XMLHttpRequest","open","overrideMimeType","onload","status","responseText","Error","statusText","onerror","onprogress","send","loadBinary","err","alert","toString","handleLoaded","location","reader","FileReader","readAsBinaryString","target","result","lengthComputable","loadedPercent","loaded","total","uiEnabled","loading","nes","loadROM","start","frameTimer","speakers","fpsInterval","getFPS","handlePauseResume","paused","layout","navbarHeight","getComputedStyle","navbar","screenContainer","innerHeight","screen","toggleControlsModal","controlsModal","el","disabled","position","src_Screen_0","frame","zapperMove","zapperFireDown","zapperFireUp","src_ControlsModal","keyboardController","gamepadController","_this3","actualSize","desiredSize","NES","onFrame","onStatusUpdate","onAudioSample","wrap","buttonDown","buttonUp","gamepadPolling","abort","App","recordPageview","GoogleAnalytics","pageview","initialize","BrowserRouter","basename","Route","exact","component","render","install","ReactDOM","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.f5a1e986.chunk.js","sourcesContent":["const config = {\r\n  ROMS: {\r\n    \"Bubble Bobble\":\r\n      \"https://cors-anywhere.herokuapp.com/http://theromdepot.com/roms/NES/US/Bubble%20Bobble%20(U).nes\",\r\n    Castlevania:\r\n      \"https://cors-anywhere.herokuapp.com/http://theromdepot.com/roms/NES/US/Castlevania%20(U).nes\",\r\n    Contra:\r\n      \"https://cors-anywhere.herokuapp.com/http://theromdepot.com/roms/NES/US/Contra%20(U).nes\",\r\n    \"Donkey Kong Classics\":\r\n      \"https://cors-anywhere.herokuapp.com/http://theromdepot.com/roms/NES/US/Donkey%20Kong%20Classics%20(U).nes\",\r\n    \"Duck Hunt\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Duck%20Hunt%20(JUE).nes\",\r\n    \"Final Fantasy\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Final%20Fantasy%20(U).nes\",\r\n    Golf:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Golf%20(JU).nes\",\r\n    \"Kirby's Adventure\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Kirby's%20Adventure%20(U).nes\",\r\n    \"The Legend of Zelda\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Legend%20of%20Zelda,%20The%20(Rev%201)%20(U).nes\",\r\n    Lemmings:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Lemmings%20(U).nes\",\r\n    Lifeforce:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Lifeforce%20(U).nes\",\r\n    \"Mario Bros.\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Mario%20Bros%20(JU).nes\",\r\n    \"Mega Man\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Mega%20Man%20(U).nes\",\r\n    \"Metal Gear\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Metal%20Gear%20(U).nes\",\r\n    Metroid:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Metroid%20(U).nes\",\r\n    \"Pac-Man\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Pac-Man%20(U).nes\",\r\n    \"Super Mario Bros.\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Super%20Mario%20Bros%20(Rev%201)%20(JU).nes\",\r\n    \"Super Mario Bros. 2\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Super%20Mario%20Bros%202%20(Rev%201)%20(U).nes\",\r\n    \"Super Mario Bros. 3\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Super%20Mario%20Bros%203%20(Rev%201)%20(U).nes\",\r\n    \"Tecmo Super Bowl\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Tecmo%20Super%20Bowl%20(U).nes\",\r\n    \"Teenage Mutant Ninja Turtles II\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Teenage%20Mutant%20Ninja%20Turtles%202%20(U).nes\",\r\n    Tennis:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Tennis%20(JU).nes\",\r\n    Tetris:\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Tetris%20(U).nes\",\r\n    \"Tetris 2\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Tetris%202%20(U).nes\",\r\n    \"Zelda 2\":\r\n      \"https://cors-anywhere.herokuapp.com/http://www.vertigofx.com/public/games/roms/nes/Zelda%202%20-%20The%20Adventure%20of%20Link%20(U).nes\"\r\n  },\r\n  GOOGLE_ANALYTICS_CODE: process.env.REACT_APP_GOOGLE_ANALYTICS_CODE,\r\n  SENTRY_URI: process.env.REACT_APP_SENTRY_URI\r\n};\r\n\r\nexport default config;\r\n","import React, { Component } from \"react\";\r\nimport \"./ListPage.css\";\r\nimport { ListGroup } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport config from \"./config\";\r\n\r\nclass ListPage extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"container ListPage my-4\"\r\n        onDragOver={this.handleDragOver}\r\n        onDrop={this.handleDrop}\r\n      >\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n            <header className=\"mb-4\">\r\n              <h1 className=\"mb-3\">JSNES</h1>\r\n              <p>A JavaScript NES emulator.</p>\r\n              <p>\r\n                By <a href=\"https://twitter.com/bfirsh\">Ben Firshman</a>. Source\r\n                on <a href=\"https://github.com/bfirsh/jsnes\">GitHub</a>.\r\n              </p>\r\n            </header>\r\n            <ListGroup className=\"mb-4\">\r\n              {Object.keys(config.ROMS).map(key => (\r\n                <Link\r\n                  key={key}\r\n                  to={\"/run/\" + encodeURIComponent(key)}\r\n                  className=\"list-group-item\"\r\n                >\r\n                  {key}\r\n                  <span className=\"float-right\">&rsaquo;</span>\r\n                </Link>\r\n              ))}\r\n            </ListGroup>\r\n            <p>Or, drag and drop a ROM file onto the page.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleDragOver = e => {\r\n    e.preventDefault();\r\n    e.dataTransfer.dropEffect = \"copy\";\r\n  };\r\n\r\n  handleDrop = e => {\r\n    e.preventDefault();\r\n\r\n    const file = e.dataTransfer.items\r\n      ? e.dataTransfer.items[0].getAsFile()\r\n      : e.dataTransfer.files[0];\r\n\r\n    this.props.history.push({ pathname: \"/run\", state: { file } });\r\n  };\r\n}\r\n\r\nexport default ListPage;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ControlMapperRow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerOneButton: \"\",\r\n      playerTwoButton: \"\",\r\n      waitingForKey: 0\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    var keys = this.props.keys;\r\n    var button = this.props.button;\r\n    var playerButtons = [];\r\n    for (var key in keys) {\r\n      if (keys[key][0] === 1 && keys[key][1] === button) {\r\n        playerButtons[0] = keys[key][2];\r\n        console.log(playerButtons[0]);\r\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\r\n        playerButtons[1] = keys[key][2];\r\n      }\r\n    }\r\n    this.setState({\r\n      playerOneButton: playerButtons[0],\r\n      playerTwoButton: playerButtons[1]\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    var keys = this.props.keys;\r\n    var button = this.props.button;\r\n    var playerButtons = [];\r\n    var gamepadButton;\r\n    var newButton;\r\n\r\n    for (var key in keys) {\r\n      if (keys[key][0] === 1 && keys[key][1] === button) {\r\n        playerButtons[0] = keys[key][2];\r\n        console.log(playerButtons[0]);\r\n      } else if (keys[key][0] === 2 && keys[key][1] === button) {\r\n        playerButtons[1] = keys[key][2];\r\n      }\r\n    }\r\n\r\n    var searchButton = (gamepadConfig, buttonId) => {\r\n      return gamepadConfig.buttons.filter(b => b.buttonId === buttonId)[0];\r\n    };\r\n\r\n    var searchNewButton = (prevGamepadConfig, gamepadConfig) => {\r\n      return gamepadConfig.buttons.filter(b => {\r\n        return (\r\n          !prevGamepadConfig ||\r\n          !prevGamepadConfig.buttons.some(b2 => b2.buttonId === b.buttonId)\r\n        );\r\n      })[0];\r\n    };\r\n\r\n    var waitingForKey = 0;\r\n    var waitingForKeyPlayer = 0;\r\n\r\n    var gamepadButtonName = gamepadButton => {\r\n      if (gamepadButton.type === \"button\") return \"Btn-\" + gamepadButton.code;\r\n      if (gamepadButton.type === \"axis\")\r\n        return \"Axis-\" + gamepadButton.code + \" \" + gamepadButton.value;\r\n    };\r\n\r\n    if (this.props.gamepadConfig && this.props.gamepadConfig.playerGamepadId) {\r\n      const playerGamepadId = this.props.gamepadConfig.playerGamepadId;\r\n      if (playerGamepadId[0]) {\r\n        playerButtons[0] = \"\";\r\n        gamepadButton = searchButton(\r\n          this.props.gamepadConfig.configs[playerGamepadId[0]],\r\n          button\r\n        );\r\n        newButton = searchNewButton(\r\n          prevProps.gamepadConfig.configs[playerGamepadId[0]],\r\n          this.props.gamepadConfig.configs[playerGamepadId[0]]\r\n        );\r\n        if (gamepadButton) {\r\n          playerButtons[0] = gamepadButtonName(gamepadButton);\r\n        } else {\r\n          if (newButton && newButton.buttonId === this.props.prevButton) {\r\n            if (!waitingForKey) {\r\n              waitingForKey = 1;\r\n              waitingForKeyPlayer = 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (playerGamepadId[1]) {\r\n        playerButtons[1] = \"\";\r\n        gamepadButton = searchButton(\r\n          this.props.gamepadConfig.configs[playerGamepadId[1]],\r\n          button\r\n        );\r\n        newButton = searchNewButton(\r\n          prevProps.gamepadConfig.configs[playerGamepadId[1]],\r\n          this.props.gamepadConfig.configs[playerGamepadId[1]]\r\n        );\r\n        if (gamepadButton) {\r\n          playerButtons[1] = gamepadButtonName(gamepadButton);\r\n        } else {\r\n          if (newButton && newButton.buttonId === this.props.prevButton) {\r\n            if (!waitingForKey) {\r\n              waitingForKey = 2;\r\n              waitingForKeyPlayer = 2;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var newState = {};\r\n\r\n    if (waitingForKey) {\r\n      this.props.handleClick([waitingForKeyPlayer, this.props.button]);\r\n    }\r\n    // Prevent setState being called repeatedly\r\n    if (\r\n      prevState.playerOneButton !== playerButtons[0] ||\r\n      prevState.playerTwoButton !== playerButtons[1]\r\n    ) {\r\n      newState.playerOneButton = playerButtons[0];\r\n      newState.playerTwoButton = playerButtons[1];\r\n    }\r\n\r\n    if (waitingForKey) {\r\n      newState.waitingForKey = waitingForKey;\r\n    } else if (prevState.waitingForKey === 1) {\r\n      if (this.props.currentPromptButton !== this.props.button) {\r\n        newState.waitingForKey = 0;\r\n      }\r\n    } else if (prevState.waitingForKey === 2) {\r\n      if (this.props.currentPromptButton !== this.props.button) {\r\n        newState.waitingForKey = 0;\r\n      }\r\n    }\r\n\r\n    if (Object.keys(newState).length > 0) {\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  handleClick(player) {\r\n    this.props.handleClick([player, this.props.button]);\r\n    this.setState({\r\n      waitingForKey: player\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const waitingText = \"Press key or button...\";\r\n    return (\r\n      <tr>\r\n        <td>{this.props.buttonName}</td>\r\n        <td onClick={() => this.handleClick(1)}>\r\n          {this.state.waitingForKey === 1\r\n            ? waitingText\r\n            : this.state.playerOneButton}\r\n        </td>\r\n        <td onClick={() => this.handleClick(2)}>\r\n          {this.state.waitingForKey === 2\r\n            ? waitingText\r\n            : this.state.playerTwoButton}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlMapperRow;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Table\r\n} from \"reactstrap\";\r\nimport { Controller } from \"jsnes\";\r\nimport ControlMapperRow from \"./ControlMapperRow\";\r\n\r\nconst GAMEPAD_ICON = \"../img/nes_controller.png\";\r\nconst KEYBOARD_ICON = \"../img/keyboard.png\";\r\n\r\nclass ControlsModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      gamepadConfig: props.gamepadConfig,\r\n      keys: props.keys,\r\n      button: undefined,\r\n      modified: false\r\n    };\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleGamepadButtonDown = this.handleGamepadButtonDown.bind(this);\r\n    this.listenForKey = this.listenForKey.bind(this);\r\n\r\n    this.state.gamepadConfig = this.state.gamepadConfig || {};\r\n    this.state.gamepadConfig.playerGamepadId = this.state.gamepadConfig\r\n      .playerGamepadId || [null, null];\r\n    this.state.gamepadConfig.configs = this.state.gamepadConfig.configs || {};\r\n\r\n    this.state.controllerIcon = this.state.gamepadConfig.playerGamepadId.map(\r\n      gamepadId => (gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON)\r\n    );\r\n    this.state.controllerIconAlt = this.state.gamepadConfig.playerGamepadId.map(\r\n      gamepadId => (gamepadId ? \"gamepad\" : \"keyboard\")\r\n    );\r\n    this.state.currentPromptButton = -1;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.state.modified) {\r\n      this.props.setKeys(this.state.keys);\r\n      this.props.setGamepadConfig(this.state.gamepadConfig);\r\n    }\r\n    this.removeKeyListener();\r\n  }\r\n\r\n  listenForKey(button) {\r\n    var currentPromptButton = button[1];\r\n\r\n    this.removeKeyListener();\r\n    this.setState({ button, currentPromptButton });\r\n    this.props.promptButton(this.handleGamepadButtonDown);\r\n    document.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleGamepadButtonDown(buttonInfo) {\r\n    this.removeKeyListener();\r\n\r\n    var button = this.state.button;\r\n\r\n    const playerId = button[0];\r\n    const buttonId = button[1];\r\n\r\n    const gamepadId = buttonInfo.gamepadId;\r\n    const gamepadConfig = this.state.gamepadConfig;\r\n\r\n    // link player to gamepad\r\n    const playerGamepadId = gamepadConfig.playerGamepadId.slice(0);\r\n    const newConfig = {};\r\n\r\n    playerGamepadId[playerId - 1] = gamepadId;\r\n\r\n    const rejectButtonId = b => {\r\n      return b.buttonId !== buttonId;\r\n    };\r\n\r\n    const newButton = {\r\n      code: buttonInfo.code,\r\n      type: buttonInfo.type,\r\n      buttonId: buttonId,\r\n      value: buttonInfo.value\r\n    };\r\n    newConfig[gamepadId] = {\r\n      buttons: (gamepadConfig.configs[gamepadId] || { buttons: [] }).buttons\r\n        .filter(rejectButtonId)\r\n        .concat([newButton])\r\n    };\r\n\r\n    const configs = Object.assign({}, gamepadConfig.configs, newConfig);\r\n\r\n    this.setState({\r\n      gamepadConfig: {\r\n        configs: configs,\r\n        playerGamepadId: playerGamepadId\r\n      },\r\n      currentPromptButton: -1,\r\n      controllerIcon: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\r\n      ),\r\n      modified: true\r\n    });\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    this.removeKeyListener();\r\n\r\n    var button = this.state.button;\r\n    var keys = this.state.keys;\r\n    var newKeys = {};\r\n    for (var key in keys) {\r\n      if (keys[key][0] !== button[0] || keys[key][1] !== button[1]) {\r\n        newKeys[key] = keys[key];\r\n      }\r\n    }\r\n\r\n    const playerGamepadId = this.state.gamepadConfig.playerGamepadId.slice(0);\r\n    const playerId = button[0];\r\n    playerGamepadId[playerId - 1] = null;\r\n\r\n    this.setState({\r\n      keys: {\r\n        ...newKeys,\r\n        [event.keyCode]: [\r\n          ...button.slice(0, 2),\r\n          event.key.length > 1 ? event.key : String(event.key).toUpperCase()\r\n        ]\r\n      },\r\n      button: undefined,\r\n      gamepadConfig: {\r\n        configs: this.state.gamepadConfig.configs,\r\n        playerGamepadId: playerGamepadId\r\n      },\r\n      currentPromptButton: -1,\r\n      controllerIcon: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? GAMEPAD_ICON : KEYBOARD_ICON\r\n      ),\r\n      controllerIconAlt: playerGamepadId.map(gamepadId =>\r\n        gamepadId ? \"gamepad\" : \"keyboard\"\r\n      ),\r\n      modified: true\r\n    });\r\n  }\r\n\r\n  removeKeyListener() {\r\n    this.props.promptButton(null);\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        isOpen={this.props.isOpen}\r\n        toggle={this.props.toggle}\r\n        className=\"ControlsModal\"\r\n      >\r\n        <ModalHeader toggle={this.props.toggle}>Controls</ModalHeader>\r\n        <ModalBody>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Button</th>\r\n                <th>\r\n                  Player 1\r\n                  <img\r\n                    className=\"controller-icon\"\r\n                    src={this.state.controllerIcon[0]}\r\n                    alt={this.state.controllerIconAlt[0]}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  Player 2\r\n                  <img\r\n                    className=\"controller-icon\"\r\n                    src={this.state.controllerIcon[1]}\r\n                    alt={this.state.controllerIconAlt[1]}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ControlMapperRow\r\n                buttonName=\"Left\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_LEFT}\r\n                prevButton={Controller.BUTTON_SELECT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"Right\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_RIGHT}\r\n                prevButton={Controller.BUTTON_LEFT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"Up\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_UP}\r\n                prevButton={Controller.BUTTON_RIGHT}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"Down\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_DOWN}\r\n                prevButton={Controller.BUTTON_UP}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"A\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_A}\r\n                prevButton={Controller.BUTTON_DOWN}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"B\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_B}\r\n                prevButton={Controller.BUTTON_A}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"Start\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_START}\r\n                prevButton={Controller.BUTTON_B}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n              <ControlMapperRow\r\n                buttonName=\"Select\"\r\n                currentPromptButton={this.state.currentPromptButton}\r\n                button={Controller.BUTTON_SELECT}\r\n                prevButton={Controller.BUTTON_START}\r\n                keys={this.state.keys}\r\n                handleClick={this.listenForKey}\r\n                gamepadConfig={this.state.gamepadConfig}\r\n              />\r\n            </tbody>\r\n          </Table>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button outline color=\"primary\" onClick={this.props.toggle}>\r\n            Close\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlsModal;\r\n","// FrameTimer is two timers: one which triggers at 60 FPS, and the other which\r\n// triggers whenever there is an animation frame.\r\n//\r\n// Normally, the animation frame is 60 FPS, but if it isn't, we need to\r\n// bodge it by setting up another timer.\r\n//\r\n// Why not just use the bodge all the time? If the animation frame is 60 FPS,\r\n// then it is a much more accurate timer than setInterval. Also, two timers\r\n// will sometimes be out of sync, causing missed frames.\r\nexport default class FrameTimer {\r\n  constructor(props) {\r\n    // Run at 60 FPS\r\n    this.onGenerateFrame = props.onGenerateFrame;\r\n    // Run on animation frame\r\n    this.onWriteFrame = props.onWriteFrame;\r\n\r\n    // Whether to fire events or not\r\n    this.running = false;\r\n\r\n    // Bodge mode and calibration\r\n    this.bodgeMode = false;\r\n\r\n    // Calibration config\r\n    this.desiredFPS = 60;\r\n    this.calibrationDelay = 200; // time to wait before starting\r\n    this.calibrationFrames = 10; // number of frames to calibrate with\r\n    this.calibrationTolerance = 5; // +/- desired FPS to consider correct\r\n\r\n    // Calibration state\r\n    this.calibrating = false;\r\n    this.calibrationStartTime = null;\r\n    this.calibrationCurrentFrames = null;\r\n\r\n    // FIXME: disable bodge mode entirely. it's not really working.\r\n    // if (window.requestAnimationFrame) {\r\n    //   // wait a sec for it to settle down\r\n    //   setTimeout(() => {\r\n    //     this.calibrating = true;\r\n    //   }, this.calibrationDelay);\r\n    // } else {\r\n    //   console.log(\"requestAnimationFrame is not supported\");\r\n    // }\r\n  }\r\n\r\n  start() {\r\n    this.running = true;\r\n    this.requestAnimationFrame();\r\n    if (this.bodgeMode) this.startBodgeMode();\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n    if (this._requestID) window.cancelAnimationFrame(this._requestID);\r\n    if (this.bodgeInterval) clearInterval(this.bodgeInterval);\r\n  }\r\n\r\n  requestAnimationFrame() {\r\n    this._requestID = window.requestAnimationFrame(this.onAnimationFrame);\r\n  }\r\n\r\n  onAnimationFrame = () => {\r\n    if (this.calibrating) {\r\n      if (this.calibrationStartTime === null) {\r\n        this.calibrationStartTime = new Date().getTime();\r\n        this.calibrationCurrentFrames = 0;\r\n      } else {\r\n        this.calibrationCurrentFrames += 1;\r\n      }\r\n\r\n      // Calibration complete!\r\n      if (this.calibrationCurrentFrames === this.calibrationFrames) {\r\n        this.calibrating = false;\r\n\r\n        var now = new Date().getTime();\r\n        var delta = now - this.calibrationStartTime;\r\n        var fps = 1000 / (delta / this.calibrationFrames);\r\n\r\n        if (\r\n          fps <= this.desiredFPS - this.calibrationTolerance ||\r\n          fps >= this.desiredFPS + this.calibrationTolerance\r\n        ) {\r\n          console.log(\r\n            `Enabling bodge mode. (Desired FPS is ${\r\n              this.desiredFPS\r\n            }, actual FPS is ${fps})`\r\n          );\r\n          this.startBodgeMode();\r\n        }\r\n      }\r\n    }\r\n\r\n    this.requestAnimationFrame();\r\n\r\n    if (this.running) {\r\n      if (!this.bodgeMode) {\r\n        this.onGenerateFrame();\r\n      }\r\n      this.onWriteFrame();\r\n    }\r\n  };\r\n\r\n  startBodgeMode = () => {\r\n    this.bodgeMode = true;\r\n    this.bodgeInterval = setInterval(this.onBodge, 1000 / this.desiredFPS);\r\n  };\r\n\r\n  onBodge = () => {\r\n    if (this.running) {\r\n      this.onGenerateFrame();\r\n    }\r\n  };\r\n}\r\n","import { Controller } from \"jsnes\";\r\n\r\n// Mapping keyboard code to [controller, button]\r\nconst KEYS = {\r\n  88: [1, Controller.BUTTON_A, \"X\"], // X\r\n  89: [1, Controller.BUTTON_B, \"Y\"], // Y (Central European keyboard)\r\n  90: [1, Controller.BUTTON_B, \"Z\"], // Z\r\n  17: [1, Controller.BUTTON_SELECT, \"Right Ctrl\"], // Right Ctrl\r\n  13: [1, Controller.BUTTON_START, \"Enter\"], // Enter\r\n  38: [1, Controller.BUTTON_UP, \"Up\"], // Up\r\n  40: [1, Controller.BUTTON_DOWN, \"Down\"], // Down\r\n  37: [1, Controller.BUTTON_LEFT, \"Left\"], // Left\r\n  39: [1, Controller.BUTTON_RIGHT, \"Right\"], // Right\r\n  103: [2, Controller.BUTTON_A, \"Num-7\"], // Num-7\r\n  105: [2, Controller.BUTTON_B, \"Num-9\"], // Num-9\r\n  99: [2, Controller.BUTTON_SELECT, \"Num-3\"], // Num-3\r\n  97: [2, Controller.BUTTON_START, \"Num-1\"], // Num-1\r\n  104: [2, Controller.BUTTON_UP, \"Num-8\"], // Num-8\r\n  98: [2, Controller.BUTTON_DOWN, \"Num-2\"], // Num-2\r\n  100: [2, Controller.BUTTON_LEFT, \"Num-4\"], // Num-4\r\n  102: [2, Controller.BUTTON_RIGHT, \"Num-6\"] // Num-6\r\n};\r\n\r\nexport default class KeyboardController {\r\n  constructor(options) {\r\n    this.onButtonDown = options.onButtonDown;\r\n    this.onButtonUp = options.onButtonUp;\r\n  }\r\n\r\n  loadKeys = () => {\r\n    var keys;\r\n    try {\r\n      keys = localStorage.getItem(\"keys\");\r\n      if (keys) {\r\n        keys = JSON.parse(keys);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to get keys from localStorage.\", e);\r\n    }\r\n\r\n    this.keys = keys || KEYS;\r\n  };\r\n\r\n  setKeys = newKeys => {\r\n    try {\r\n      localStorage.setItem(\"keys\", JSON.stringify(newKeys));\r\n      this.keys = newKeys;\r\n    } catch (e) {\r\n      console.log(\"Failed to set keys in localStorage\");\r\n    }\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    var key = this.keys[e.keyCode];\r\n    if (key) {\r\n      this.onButtonDown(key[0], key[1]);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleKeyUp = e => {\r\n    var key = this.keys[e.keyCode];\r\n    if (key) {\r\n      this.onButtonUp(key[0], key[1]);\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  handleKeyPress = e => {\r\n    e.preventDefault();\r\n  };\r\n}\r\n","export default class GamepadController {\r\n  constructor(options) {\r\n    this.onButtonDown = options.onButtonDown;\r\n    this.onButtonUp = options.onButtonUp;\r\n    this.gamepadState = [];\r\n    this.buttonCallback = null;\r\n  }\r\n\r\n  disableIfGamepadEnabled = callback => {\r\n    var self = this;\r\n    return (playerId, buttonId) => {\r\n      if (!self.gamepadConfig) {\r\n        return callback(playerId, buttonId);\r\n      }\r\n\r\n      var playerGamepadId = self.gamepadConfig.playerGamepadId;\r\n      if (!playerGamepadId || !playerGamepadId[playerId - 1]) {\r\n        // allow callback only if player is not associated to any gamepad\r\n        return callback(playerId, buttonId);\r\n      }\r\n    };\r\n  };\r\n\r\n  _getPlayerNumberFromGamepad = gamepad => {\r\n    if (this.gamepadConfig.playerGamepadId[0] === gamepad.id) {\r\n      return 1;\r\n    }\r\n\r\n    if (this.gamepadConfig.playerGamepadId[1] === gamepad.id) {\r\n      return 2;\r\n    }\r\n\r\n    return 1;\r\n  };\r\n\r\n  poll = () => {\r\n    const gamepads = navigator.getGamepads\r\n      ? navigator.getGamepads()\r\n      : navigator.webkitGetGamepads();\r\n\r\n    const usedPlayers = [];\r\n\r\n    for (let gamepadIndex = 0; gamepadIndex < gamepads.length; gamepadIndex++) {\r\n      const gamepad = gamepads[gamepadIndex];\r\n      const previousGamepad = this.gamepadState[gamepadIndex];\r\n\r\n      if (!gamepad) {\r\n        continue;\r\n      }\r\n\r\n      if (!previousGamepad) {\r\n        this.gamepadState[gamepadIndex] = gamepad;\r\n        continue;\r\n      }\r\n\r\n      const buttons = gamepad.buttons;\r\n      const previousButtons = previousGamepad.buttons;\r\n\r\n      if (this.buttonCallback) {\r\n        for (let code = 0; code < gamepad.axes.length; code++) {\r\n          const axis = gamepad.axes[code];\r\n          const previousAxis = previousGamepad.axes[code];\r\n\r\n          if (axis === -1 && previousAxis !== -1) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"axis\",\r\n              code: code,\r\n              value: axis\r\n            });\r\n          }\r\n\r\n          if (axis === 1 && previousAxis !== 1) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"axis\",\r\n              code: code,\r\n              value: axis\r\n            });\r\n          }\r\n        }\r\n\r\n        for (let code = 0; code < buttons.length; code++) {\r\n          const button = buttons[code];\r\n          const previousButton = previousButtons[code];\r\n          if (button.pressed && !previousButton.pressed) {\r\n            this.buttonCallback({\r\n              gamepadId: gamepad.id,\r\n              type: \"button\",\r\n              code: code\r\n            });\r\n          }\r\n        }\r\n      } else if (this.gamepadConfig) {\r\n        let playerNumber = this._getPlayerNumberFromGamepad(gamepad);\r\n        if (usedPlayers.length < 2) {\r\n          if (usedPlayers.indexOf(playerNumber) !== -1) {\r\n            playerNumber++;\r\n            if (playerNumber > 2) playerNumber = 1;\r\n          }\r\n          usedPlayers.push(playerNumber);\r\n\r\n          if (this.gamepadConfig.configs[gamepad.id]) {\r\n            const configButtons = this.gamepadConfig.configs[gamepad.id]\r\n              .buttons;\r\n\r\n            for (let i = 0; i < configButtons.length; i++) {\r\n              const configButton = configButtons[i];\r\n              if (configButton.type === \"button\") {\r\n                const code = configButton.code;\r\n                const button = buttons[code];\r\n                const previousButton = previousButtons[code];\r\n\r\n                if (button.pressed && !previousButton.pressed) {\r\n                  this.onButtonDown(playerNumber, configButton.buttonId);\r\n                } else if (!button.pressed && previousButton.pressed) {\r\n                  this.onButtonUp(playerNumber, configButton.buttonId);\r\n                }\r\n              } else if (configButton.type === \"axis\") {\r\n                const code = configButton.code;\r\n                const axis = gamepad.axes[code];\r\n                const previousAxis = previousGamepad.axes[code];\r\n\r\n                if (\r\n                  axis === configButton.value &&\r\n                  previousAxis !== configButton.value\r\n                ) {\r\n                  this.onButtonDown(playerNumber, configButton.buttonId);\r\n                }\r\n\r\n                if (\r\n                  axis !== configButton.value &&\r\n                  previousAxis === configButton.value\r\n                ) {\r\n                  this.onButtonUp(playerNumber, configButton.buttonId);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.gamepadState[gamepadIndex] = {\r\n        buttons: buttons.map(b => {\r\n          return { pressed: b.pressed };\r\n        }),\r\n        axes: gamepad.axes.slice(0)\r\n      };\r\n    }\r\n  };\r\n\r\n  promptButton = f => {\r\n    if (!f) {\r\n      this.buttonCallback = f;\r\n    } else {\r\n      this.buttonCallback = buttonInfo => {\r\n        this.buttonCallback = null;\r\n        f(buttonInfo);\r\n      };\r\n    }\r\n  };\r\n\r\n  loadGamepadConfig = () => {\r\n    var gamepadConfig;\r\n    try {\r\n      gamepadConfig = localStorage.getItem(\"gamepadConfig\");\r\n      if (gamepadConfig) {\r\n        gamepadConfig = JSON.parse(gamepadConfig);\r\n      }\r\n    } catch (e) {\r\n      console.log(\"Failed to get gamepadConfig from localStorage.\", e);\r\n    }\r\n\r\n    this.gamepadConfig = gamepadConfig;\r\n  };\r\n\r\n  setGamepadConfig = gamepadConfig => {\r\n    try {\r\n      localStorage.setItem(\"gamepadConfig\", JSON.stringify(gamepadConfig));\r\n      this.gamepadConfig = gamepadConfig;\r\n    } catch (e) {\r\n      console.log(\"Failed to set gamepadConfig in localStorage\");\r\n    }\r\n  };\r\n\r\n  startPolling = () => {\r\n    var req;\r\n    const loop = () => {\r\n      this.poll();\r\n      req = requestAnimationFrame(loop);\r\n    };\r\n    req = requestAnimationFrame(loop);\r\n\r\n    return {\r\n      stop: () => {\r\n        cancelAnimationFrame(req);\r\n      }\r\n    };\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./Screen.css\";\r\n\r\nconst SCREEN_WIDTH = 256;\r\nconst SCREEN_HEIGHT = 240;\r\n\r\nclass Screen extends Component {\r\n  render() {\r\n    return (\r\n      <canvas\r\n        className=\"Screen\"\r\n        width={SCREEN_WIDTH}\r\n        height={SCREEN_HEIGHT}\r\n        onMouseDown={this.handleMouseDown}\r\n        onMouseUp={this.props.onMouseUp}\r\n        ref={canvas => {\r\n          this.canvas = canvas;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initCanvas();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.initCanvas();\r\n  }\r\n\r\n  initCanvas() {\r\n    this.context = this.canvas.getContext(\"2d\");\r\n    this.imageData = this.context.getImageData(\r\n      0,\r\n      0,\r\n      SCREEN_WIDTH,\r\n      SCREEN_HEIGHT\r\n    );\r\n\r\n    this.context.fillStyle = \"black\";\r\n    // set alpha to opaque\r\n    this.context.fillRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    // buffer to write on next animation frame\r\n    this.buf = new ArrayBuffer(this.imageData.data.length);\r\n    // Get the canvas buffer in 8bit and 32bit\r\n    this.buf8 = new Uint8ClampedArray(this.buf);\r\n    this.buf32 = new Uint32Array(this.buf);\r\n\r\n    // Set alpha\r\n    for (var i = 0; i < this.buf32.length; ++i) {\r\n      this.buf32[i] = 0xff000000;\r\n    }\r\n  }\r\n\r\n  setBuffer = buffer => {\r\n    var i = 0;\r\n    for (var y = 0; y < SCREEN_HEIGHT; ++y) {\r\n      for (var x = 0; x < SCREEN_WIDTH; ++x) {\r\n        i = y * 256 + x;\r\n        // Convert pixel from NES BGR to canvas ABGR\r\n        this.buf32[i] = 0xff000000 | buffer[i]; // Full alpha\r\n      }\r\n    }\r\n  };\r\n\r\n  writeBuffer = () => {\r\n    this.imageData.data.set(this.buf8);\r\n    this.context.putImageData(this.imageData, 0, 0);\r\n  };\r\n\r\n  fitInParent = () => {\r\n    let parent = this.canvas.parentNode;\r\n    let parentWidth = parent.clientWidth;\r\n    let parentHeight = parent.clientHeight;\r\n    let parentRatio = parentWidth / parentHeight;\r\n    let desiredRatio = SCREEN_WIDTH / SCREEN_HEIGHT;\r\n    if (desiredRatio < parentRatio) {\r\n      this.canvas.style.width = `${Math.round(parentHeight * desiredRatio)}px`;\r\n      this.canvas.style.height = `${parentHeight}px`;\r\n    } else {\r\n      this.canvas.style.width = `${parentWidth}px`;\r\n      this.canvas.style.height = `${Math.round(parentWidth / desiredRatio)}px`;\r\n    }\r\n  };\r\n\r\n  screenshot() {\r\n    var img = new Image();\r\n    img.src = this.canvas.toDataURL(\"image/png\");\r\n    return img;\r\n  }\r\n\r\n  handleMouseDown = e => {\r\n    if (!this.props.onMouseDown) return;\r\n    // Make coordinates unscaled\r\n    let scale = SCREEN_WIDTH / parseFloat(this.canvas.style.width);\r\n    let rect = this.canvas.getBoundingClientRect();\r\n    let x = Math.round((e.clientX - rect.left) * scale);\r\n    let y = Math.round((e.clientY - rect.top) * scale);\r\n    this.props.onMouseDown(x, y);\r\n  };\r\n}\r\n\r\nexport default Screen;\r\n","import Raven from \"raven-js\";\r\n\r\nexport const handleError = (error, errorInfo) => {\r\n  console.error(error);\r\n  Raven.captureException(error, { extra: errorInfo });\r\n};\r\n","import RingBuffer from \"ringbufferjs\";\r\nimport { handleError } from \"./utils\";\r\n\r\nexport default class Speakers {\r\n  constructor({ onBufferUnderrun }) {\r\n    this.onBufferUnderrun = onBufferUnderrun;\r\n    this.bufferSize = 8192;\r\n    this.buffer = new RingBuffer(this.bufferSize * 2);\r\n  }\r\n\r\n  start() {\r\n    // Audio is not supported\r\n    if (!window.AudioContext) {\r\n      return;\r\n    }\r\n    this.audioCtx = new window.AudioContext();\r\n    this.scriptNode = this.audioCtx.createScriptProcessor(1024, 0, 2);\r\n    this.scriptNode.onaudioprocess = this.onaudioprocess;\r\n    this.scriptNode.connect(this.audioCtx.destination);\r\n  }\r\n\r\n  stop() {\r\n    if (this.scriptNode) {\r\n      this.scriptNode.disconnect(this.audioCtx.destination);\r\n      this.scriptNode.onaudioprocess = null;\r\n      this.scriptNode = null;\r\n    }\r\n    if (this.audioCtx) {\r\n      this.audioCtx.close().catch(handleError);\r\n      this.audioCtx = null;\r\n    }\r\n  }\r\n\r\n  writeSample = (left, right) => {\r\n    if (this.buffer.size() / 2 >= this.bufferSize) {\r\n      console.log(`Buffer overrun`);\r\n    }\r\n    this.buffer.enq(left);\r\n    this.buffer.enq(right);\r\n  };\r\n\r\n  onaudioprocess = e => {\r\n    var left = e.outputBuffer.getChannelData(0);\r\n    var right = e.outputBuffer.getChannelData(1);\r\n    var size = left.length;\r\n\r\n    // We're going to buffer underrun. Attempt to fill the buffer.\r\n    if (this.buffer.size() < size * 2 && this.onBufferUnderrun) {\r\n      this.onBufferUnderrun(this.buffer.size(), size * 2);\r\n    }\r\n\r\n    try {\r\n      var samples = this.buffer.deqN(size * 2);\r\n    } catch (e) {\r\n      // onBufferUnderrun failed to fill the buffer, so handle a real buffer\r\n      // underrun\r\n\r\n      // ignore empty buffers... assume audio has just stopped\r\n      var bufferSize = this.buffer.size() / 2;\r\n      if (bufferSize > 0) {\r\n        console.log(`Buffer underrun (needed ${size}, got ${bufferSize})`);\r\n      }\r\n      for (var j = 0; j < size; j++) {\r\n        left[j] = 0;\r\n        right[j] = 0;\r\n      }\r\n      return;\r\n    }\r\n    for (var i = 0; i < size; i++) {\r\n      left[i] = samples[i * 2];\r\n      right[i] = samples[i * 2 + 1];\r\n    }\r\n  };\r\n}\r\n","import Raven from \"raven-js\";\r\nimport React, { Component } from \"react\";\r\nimport { Button, Progress } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RunPage.css\";\r\nimport config from \"./config\";\r\nimport ControlsModal from \"./ControlsModal\";\r\nimport FrameTimer from \"./FrameTimer\";\r\nimport KeyboardController from \"./KeyboardController\";\r\nimport GamepadController from \"./GamepadController\";\r\nimport Screen from \"./Screen\";\r\nimport Speakers from \"./Speakers\";\r\nimport { NES } from \"jsnes\";\r\n\r\nfunction loadBinary(path, callback, handleProgress) {\r\n  var req = new XMLHttpRequest();\r\n  req.open(\"GET\", path);\r\n  req.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n  req.onload = function() {\r\n    if (this.status === 200) {\r\n      callback(null, this.responseText);\r\n    } else if (this.status === 0) {\r\n      // Aborted, so ignore error\r\n    } else {\r\n      callback(new Error(req.statusText));\r\n    }\r\n  };\r\n  req.onerror = function() {\r\n    callback(new Error(req.statusText));\r\n  };\r\n  req.onprogress = handleProgress;\r\n  req.send();\r\n  return req;\r\n}\r\n\r\nclass RunPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      running: false,\r\n      paused: false,\r\n      controlsModal: false,\r\n      loading: true,\r\n      loadedPercent: 3,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"RunPage\">\r\n        <nav\r\n          className=\"navbar navbar-expand\"\r\n          ref={el => {\r\n            this.navbar = el;\r\n          }}\r\n        >\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"navitem\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                &lsaquo; Back\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={this.toggleControlsModal}\r\n            className=\"mr-3\"\r\n          >\r\n            Controls\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color=\"primary\"\r\n            onClick={this.handlePauseResume}\r\n            disabled={!this.state.running}\r\n          >\r\n            {this.state.paused ? \"Resume\" : \"Pause\"}\r\n          </Button>\r\n        </nav>\r\n\r\n        {this.state.error ? (\r\n          this.state.error\r\n        ) : (\r\n          <div\r\n            className=\"screen-container\"\r\n            ref={el => {\r\n              this.screenContainer = el;\r\n            }}\r\n          >\r\n            {this.state.loading ? (\r\n              <Progress\r\n                value={this.state.loadedPercent}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  width: \"70%\",\r\n                  left: \"15%\",\r\n                  top: \"48%\"\r\n                }}\r\n              />\r\n            ) : null}\r\n            <Screen\r\n              ref={screen => {\r\n                this.screen = screen;\r\n              }}\r\n              onGenerateFrame={() => {\r\n                this.nes.frame();\r\n              }}\r\n              onMouseDown={(x, y) => {\r\n                // console.log(\"mouseDown\")\r\n                this.nes.zapperMove(x, y);\r\n                this.nes.zapperFireDown();\r\n              }}\r\n              onMouseUp={() => {\r\n                // console.log(\"mouseUp\")\r\n                this.nes.zapperFireUp();\r\n              }}\r\n            />\r\n            {this.state.controlsModal && (\r\n              <ControlsModal\r\n                isOpen={this.state.controlsModal}\r\n                toggle={this.toggleControlsModal}\r\n                keys={this.keyboardController.keys}\r\n                setKeys={this.keyboardController.setKeys}\r\n                promptButton={this.gamepadController.promptButton}\r\n                gamepadConfig={this.gamepadController.gamepadConfig}\r\n                setGamepadConfig={this.gamepadController.setGamepadConfig}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.speakers = new Speakers({\r\n      onBufferUnderrun: (actualSize, desiredSize) => {\r\n        if (!this.state.running || this.state.paused) {\r\n          return;\r\n        }\r\n        // Skip a video frame so audio remains consistent. This happens for\r\n        // a variety of reasons:\r\n        // - Frame rate is not quite 60fps, so sometimes buffer empties\r\n        // - Page is not visible, so requestAnimationFrame doesn't get fired.\r\n        //   In this case emulator still runs at full speed, but timing is\r\n        //   done by audio instead of requestAnimationFrame.\r\n        // - System can't run emulator at full speed. In this case it'll stop\r\n        //    firing requestAnimationFrame.\r\n        console.log(\r\n          \"Buffer underrun, running another frame to try and catch up\"\r\n        );\r\n\r\n        this.nes.frame();\r\n        // desiredSize will be 2048, and the NES produces 1468 samples on each\r\n        // frame so we might need a second frame to be run. Give up after that\r\n        // though -- the system is not catching up\r\n        if (this.speakers.buffer.size() < desiredSize) {\r\n          console.log(\"Still buffer underrun, running a second frame\");\r\n          this.nes.frame();\r\n        }\r\n      }\r\n    });\r\n    this.nes = new NES({\r\n      onFrame: this.screen.setBuffer,\r\n      onStatusUpdate: console.log,\r\n      onAudioSample: this.speakers.writeSample\r\n    });\r\n\r\n    // For debugging\r\n    window.nes = this.nes;\r\n\r\n    this.frameTimer = new FrameTimer({\r\n      onGenerateFrame: Raven.wrap(this.nes.frame),\r\n      onWriteFrame: Raven.wrap(this.screen.writeBuffer)\r\n    });\r\n\r\n    this.gamepadController = new GamepadController({\r\n      onButtonDown: this.nes.buttonDown,\r\n      onButtonUp: this.nes.buttonUp\r\n    });\r\n\r\n    this.gamepadController.loadGamepadConfig();\r\n\r\n    this.gamepadPolling = this.gamepadController.startPolling();\r\n\r\n    this.keyboardController = new KeyboardController({\r\n      onButtonDown: this.gamepadController.disableIfGamepadEnabled(\r\n        this.nes.buttonDown\r\n      ),\r\n      onButtonUp: this.gamepadController.disableIfGamepadEnabled(\r\n        this.nes.buttonUp\r\n      )\r\n    });\r\n\r\n    // Load keys from localStorage (if they exist)\r\n    this.keyboardController.loadKeys();\r\n\r\n    document.addEventListener(\"keydown\", this.keyboardController.handleKeyDown);\r\n    document.addEventListener(\"keyup\", this.keyboardController.handleKeyUp);\r\n    document.addEventListener(\r\n      \"keypress\",\r\n      this.keyboardController.handleKeyPress\r\n    );\r\n\r\n    window.addEventListener(\"resize\", this.layout);\r\n    this.layout();\r\n\r\n    this.load();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.currentRequest) {\r\n      this.currentRequest.abort();\r\n    }\r\n    this.stop();\r\n    document.removeEventListener(\r\n      \"keydown\",\r\n      this.keyboardController.handleKeyDown\r\n    );\r\n    document.removeEventListener(\"keyup\", this.keyboardController.handleKeyUp);\r\n    document.removeEventListener(\r\n      \"keypress\",\r\n      this.keyboardController.handleKeyPress\r\n    );\r\n\r\n    this.gamepadPolling.stop();\r\n\r\n    window.removeEventListener(\"resize\", this.layout);\r\n\r\n    window.nes = undefined;\r\n  }\r\n\r\n  load = () => {\r\n    if (this.props.match.params.rom) {\r\n      const romName = this.props.match.params.rom;\r\n      const path = config.ROMS[romName];\r\n      if (!path) {\r\n        this.setState({ error: `No such ROM: ${romName}` });\r\n        return;\r\n      }\r\n      this.currentRequest = loadBinary(\r\n        path,\r\n        (err, data) => {\r\n          if (err) {\r\n            window.alert(`Error loading ROM: ${err.toString()}`);\r\n          } else {\r\n            this.handleLoaded(data);\r\n          }\r\n        },\r\n        this.handleProgress\r\n      );\r\n    } else if (this.props.location.state && this.props.location.state.file) {\r\n      let reader = new FileReader();\r\n      reader.readAsBinaryString(this.props.location.state.file);\r\n      reader.onload = e => {\r\n        this.currentRequest = null;\r\n        this.handleLoaded(e.target.result);\r\n      };\r\n    } else {\r\n      window.alert(\"No ROM provided\");\r\n    }\r\n  };\r\n\r\n  handleProgress = e => {\r\n    if (e.lengthComputable) {\r\n      this.setState({ loadedPercent: (e.loaded / e.total) * 100 });\r\n    }\r\n  };\r\n\r\n  handleLoaded = data => {\r\n    this.setState({ uiEnabled: true, running: true, loading: false });\r\n    this.nes.loadROM(data);\r\n    this.start();\r\n  };\r\n\r\n  start = () => {\r\n    this.frameTimer.start();\r\n    this.speakers.start();\r\n    this.fpsInterval = setInterval(() => {\r\n      console.log(`FPS: ${this.nes.getFPS()}`);\r\n    }, 1000);\r\n  };\r\n\r\n  stop = () => {\r\n    this.frameTimer.stop();\r\n    this.speakers.stop();\r\n    clearInterval(this.fpsInterval);\r\n  };\r\n\r\n  handlePauseResume = () => {\r\n    if (this.state.paused) {\r\n      this.setState({ paused: false });\r\n      this.start();\r\n    } else {\r\n      this.setState({ paused: true });\r\n      this.stop();\r\n    }\r\n  };\r\n\r\n  layout = () => {\r\n    let navbarHeight = parseFloat(window.getComputedStyle(this.navbar).height);\r\n    this.screenContainer.style.height = `${window.innerHeight -\r\n      navbarHeight}px`;\r\n    this.screen.fitInParent();\r\n  };\r\n\r\n  toggleControlsModal = () => {\r\n    this.setState({ controlsModal: !this.state.controlsModal });\r\n  };\r\n}\r\n\r\nexport default RunPage;\r\n","import React, { Component } from \"react\";\r\nimport GoogleAnalytics from \"react-ga\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport ListPage from \"./ListPage\";\r\nimport RunPage from \"./RunPage\";\r\nimport config from \"./config\";\r\nimport { handleError } from \"./utils\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n    if (config.GOOGLE_ANALYTICS_CODE) {\r\n      GoogleAnalytics.initialize(config.GOOGLE_ANALYTICS_CODE);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return (\r\n        <div className=\"container my-4\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-8\">\r\n              Oops - there has been an error. It has been logged to the console.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <BrowserRouter basename=\"/jsnes-web/build\">\r\n        <div className=\"App\">\r\n          <Route exact path=\"/\" component={ListPage} />\r\n          <Route exact path=\"/run\" component={RunPage} />\r\n          <Route exact path=\"/run/:rom\" component={RunPage} />\r\n          <Route path=\"/\" render={this.recordPageview} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error });\r\n    handleError(error, errorInfo);\r\n  }\r\n\r\n  recordPageview = ({ location }) => {\r\n    GoogleAnalytics.pageview(location.pathname);\r\n    return null;\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import Raven from \"raven-js\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport config from \"./config\";\r\nimport \"./index.scss\";\r\n\r\nif (config.SENTRY_URI) {\r\n  Raven.config(config.SENTRY_URI).install();\r\n}\r\n\r\nRaven.context(function() {\r\n  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n});\r\n"],"sourceRoot":""}